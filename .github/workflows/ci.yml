# name: CI

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main, develop ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         go-version: [1.21, 1.22]

#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Go
#       uses: actions/setup-go@v4
#       with:
#         go-version: ${{ matrix.go-version }}

#     - name: Cache Go modules
#       uses: actions/cache@v3
#       with:
#         path: ~/go/pkg/mod
#         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#         restore-keys: |
#           ${{ runner.os }}-go-

#     - name: Download dependencies
#       run: go mod download

#     - name: Verify dependencies
#       run: go mod verify

#     - name: Run go vet
#       run: go vet ./...

#     - name: Run tests
#       run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v3
#       with:
#         file: ./coverage.out
#         flags: unittests
#         name: codecov-umbrella

#     - name: Run examples
#       run: go run examples/main.go

#   lint:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Go
#       uses: actions/setup-go@v4
#       with:
#         go-version: 1.22

#     - name: golangci-lint
#       uses: golangci/golangci-lint-action@v3
#       with:
#         version: latest
#         args: --timeout=5m

#   security:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4

#     - name: Set up Go
#       uses: actions/setup-go@v4
#       with:
#         go-version: 1.22

#     - name: Run Gosec Security Scanner
#       uses: securecodewarrior/github-action-gosec@master
#       with:
#         args: './...'